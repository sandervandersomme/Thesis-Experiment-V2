import torch
import numpy as np

from src.data.cf import CF
from src.data.cf_classification import CF_Classification
from src.data.cf_regression import CF_Regression
from torch.utils.data import Dataset

def load_synthetic_data(dataset: str, model: str):
    '''
    Loads data from numpy file
    '''
    print(f"Loading {dataset} data generated by {model}..")

    path = f"output/syndata/{model}/{dataset}.npy"

    data = np.load(path)
    return torch.from_numpy(data).float()

def select_data(dataset: str) -> Dataset:
    "select and load dataset"
    if dataset == "cf":
        return CF()

def create_downstream_dataset(dataset, task: str):
    if task == "classification":
        return create_classification_dataset(dataset)
    if task == "regression":
        return create_regression_dataset(dataset)
    
def create_classification_dataset(dataset):
    if dataset.NAME == "cf":
        return CF_Classification(dataset.sequences, dataset.columns.copy())

def create_regression_dataset(dataset):
    if dataset.NAME == "cf":
        return CF_Regression(dataset.sequences, dataset.columns.copy())